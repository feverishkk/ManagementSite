@page "/forgotpassword"
@attribute [AllowAnonymous]

<h3>ForgotPassword</h3>

@if(ShowErrors is true)
{
    <div class="alert alert-danger" role="alert">
        <p>@Message</p>
    </div>
}

<EditForm Model="model" OnValidSubmit="OnValidSubmit">
    <FluentValidationValidator />
    <ValidationSummary></ValidationSummary>

    <MudTextField Label="Email" HelperText="Please Enter the Email Address" @bind-Value="model.Email" 
                  For="@(()=>model.Email)" Class="mt-3" />
    <ValidationMessage For="@(()=>model.Email)" />

     <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-3">
         Confirm
     </MudButton>

</EditForm>


@code {
    private ForgotPasswordViewModel model;

    private string Message = string.Empty;
    private bool ShowErrors = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        model = new ForgotPasswordViewModel();
    }

    private async Task OnValidSubmit()
    {
        var result = await _accountHttpService.ForgotPassword(model);
        if(result.Successful is false)
        {
            Message = "Please Check your Email Address";
            ShowErrors = true;
        }
        else
        {
            Message = "A reset Email has been sent it! Please Check your Email!";
            ShowErrors = true;
        }
    }




}
