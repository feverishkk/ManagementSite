@page "/Account/ResetPassword?"
@using System.Web

@using System.Diagnostics
@*@inject *@
<h3>ResetPassword</h3>

@if (ShowErrors == true)
{
    <div class="alert alert-danger" role="alert">
        <p> @Errors </p>
    </div>
}

<EditForm Model="model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <input type="hidden" name="Token" value="@Token" />
    <MudTextField Label="Email" @bind-Value="@model.Email" For="@(()=>model.Email)" Class="mt-3" />

    <MudTextField Label="New Password" @bind-Value="model.Password" For="@(()=>model.Password)" Required />
    <MudTextField Label="Confirm New Password" @bind-Value="model.ConfirmPassword" For="@(()=>model.ConfirmPassword)"
                  Required />

    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">
        Confirm
    </MudButton>


</EditForm>


@code {

    public string CurrentUserName { get; set; } = string.Empty;
    public bool ShowErrors { get; set; } = false;
    public string Errors { get; set; } = string.Empty;
    public string Token { get; set; } = string.Empty;
    public string Email { get; set; } = string.Empty;

    HttpRequest httpRequest { get; set; }
    private ResetPasswordDto model;

    protected override void OnInitialized()
    {
        model = new ResetPasswordDto();
        getUserToken();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        model.Token = Token;
    }

    private void getUserToken()
    {
        var uri = _navigationManager.ToAbsoluteUri(_navigationManager.Uri);

        // Token, Email쿼리를 파싱한다.
        var queryStrings = QueryHelpers.ParseQuery(uri.Query);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("Token", out var UserToken))
        {
            Token = UserToken;
        }
    }

    private async Task OnValidSubmit()
    {
        var result = await _accountService.ResetPassword(model);
        if (result == null || !result.Successful)
        {
            ShowErrors = true;
            Errors = result.Errors;
        }
        else
        {
            _navigationManager.NavigateTo("/login");
        }
    }

}
