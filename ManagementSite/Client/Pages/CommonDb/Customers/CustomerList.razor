@page "/customerlist"

<MudTable Items="@CustomerUserList" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" @ref="table">

    <ToolBarContent>
        <MudText Typo="Typo.h6">CustomerList</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    <HeaderContent>
        <MudTh>UserName</MudTh>
        <MudTh>Email_Address</MudTh>
        <MudTh>MobileNumber</MudTh>
        <MudTh>Gender</MudTh>
        <MudTh>Country</MudTh>
        <MudTh>MemberSince</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="UserName">@context.UserName</MudTd>
        <MudTd DataLabel="Email_Address">@context.Email_Address</MudTd>
        <MudTd DataLabel="MobileNumber">@context.MobileNumber</MudTd>
        <MudTd DataLabel="Gender">@context.Gender</MudTd>
        <MudTd DataLabel="Gender">@context.Country</MudTd>
        <MudTd DataLabel="MemberSince">@context.MemberSince</MudTd>
    </RowTemplate>

   <PagerContent>
        <MudTablePager PageSizeOptions="pageSizeOptions"></MudTablePager>
    </PagerContent>

</MudTable>

<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>
    <MudSpacer />
</div>

@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = false;
    private string searchString { get; set; } = string.Empty;

    private int[] pageSizeOptions = new int[] { 5, 10, 15, 50, 100 };

    private MudTable<CustomersDto> table;

    private IEnumerable<CustomersDto> CustomerUserList = new List<CustomersDto>();
    private CustomersDto Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Customer = new CustomersDto();
        CustomerUserList = await _customersService.GetAllCustomers();
        table.SetRowsPerPage(10);
    }
}
