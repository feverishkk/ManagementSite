@page "/customeringameinfo/{UserId}"
@using ManagementSite.Client.Pages.CommonDb.Customers.ChangeCustomerItem
@attribute [Authorize(Roles = "SuperAdministrator, ServerAdministrator")]

<CustomersInGameInfo InGameInfo="InGameInfo" />

<MudSpacer />

<CustomerEquipment CustomersEquipment="@CustomersEquipment" />

<MudSpacer />

<CascadingValue Value="@UserId">
    <ChangeCustomerWeapon TotalWeapons="@Weapons" />
    <ChangeCustomerTShirt TShirts="@TShirts" />
    <ChangeCustomerArmor Armors="@Armors" />
    <ChangeCustomerCape Capes="@Capes"/>
    <ChangeCustomerHelmet Helmets="@Helmets" />
    <ChangeCustomerNeckless Necklesses="@Necklesses" />
    <ChangeCustomerRing1 Ring1="@Ring1" />
    <ChangeCustomerRing2 Ring2="@Ring2" />
    <ChangeCustomerBelt Belts="@Belts" />
    <ChangeCustomerBoots Boots="@Boot" />
    <ChangeCustomerEarRing EarRings="EarRings" />
    <ChangeCustomerGuard Guards="@Guards" />
    <ChangeCustomerGlobe Globes="@Globes" />
</CascadingValue>

@code {
    [Parameter]
    public string UserId { get; set; }

    MudForm form;
    private MudTable<CustomersViewModel> table;

    private IEnumerable<CustomersInGameInfoViewModel> InGameInfo { get; set; } = new List<CustomersInGameInfoViewModel>();
    private IEnumerable<CustomerEquipmentViewModel> CustomersEquipment { get; set; } = new List<CustomerEquipmentViewModel>();

    private IEnumerable<TotalWeapons> Weapons = new List<TotalWeapons>();
    private IEnumerable<TShirt> TShirts = new List<TShirt>();
    private IEnumerable<Armor> Armors = new List<Armor>();
    private IEnumerable<Cape> Capes = new List<Cape>();
    private IEnumerable<Helmet> Helmets = new List<Helmet>();
    private IEnumerable<Neckless> Necklesses = new List<Neckless>();
    private IEnumerable<Ring1> Ring1 = new List<Ring1>();
    private IEnumerable<Ring2> Ring2 = new List<Ring2>();
    private IEnumerable<Belt> Belts = new List<Belt>();
    private IEnumerable<Boots> Boot = new List<Boots>();
    private IEnumerable<EarRing> EarRings = new List<EarRing>();
    private IEnumerable<Guard> Guards = new List<Guard>();
    private IEnumerable<Globe> Globes = new List<Globe>();


    protected override async Task OnInitializedAsync()
    {
        await LoadAccessories();
        await LoadArmorAndWeapon();
        await base.OnInitializedAsync();
    }

    private async Task LoadAccessories()
    {
        InGameInfo = await _customersHttpService.CustomersInGameInfo(this.UserId);
        CustomersEquipment = await _customersHttpService.CustomersEquipment(this.UserId);

        Belts = await _getItemHttpService.GetBelt();
        EarRings = await _getItemHttpService.GetEarRing();
        Necklesses = await _getItemHttpService.GetNeckless();
        Ring1 = await _getItemHttpService.GetRing1();
        Ring2 = await _getItemHttpService.GetRing2();
    }

    private async Task LoadArmorAndWeapon()
    {
        Armors = await _getItemHttpService.GetArmor();
        Boot = await _getItemHttpService.GetBoots();
        Capes = await _getItemHttpService.GetCape();
        Globes = await _getItemHttpService.GetGlobe();
        Guards = await _getItemHttpService.GetGuard();
        Helmets = await _getItemHttpService.GetHelmet();
        TShirts = await _getItemHttpService.GetTShirt();

        Weapons = await _getItemHttpService.GetAllWeapon();

    }
}