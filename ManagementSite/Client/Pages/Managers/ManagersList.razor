@page "/managers"

<MudTable Items="@ApplicationUsers" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped"
          Filter="new Func<ApplicationUser, bool>(FilterFunction)">

    <ToolBarContent>
        <MudText Typo="Typo.h6">Managers List</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    <HeaderContent>
        <MudTh>Email</MudTh>
        <MudTh>Family Name</MudTh>
        <MudTh>Given Name</MudTh>
        <MudTh>Member Since</MudTh>
        <MudTh> Role </MudTh>
        <MudTh>Department</MudTh>
        <MudTh>Department Number</MudTh>
        <MudTh>Email Confirmed</MudTh>
        <MudTh>Options</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Email">@context.Email</MudTd>
        <MudTd DataLabel="Family Name">@context.FamilyName</MudTd>
        <MudTd DataLabel="Given Name">@context.GivenName</MudTd>
        <MudTd DataLabel="Member Since">@context.MemberSince</MudTd>
        <MudTd DataLabel="Role">@context.Role</MudTd>
        <MudTd DataLabel="Department">@context.Department</MudTd>
        <MudTd DataLabel="Department Number">@context.DepartmentNumber</MudTd>
        <MudTd DataLabel="Email Confirmed">@context.EmailConfirmed</MudTd>
        <MudTd DataLabel="Options">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Error" 
                       OnClick="()=>OnValidSubmit(context.Id)">
                Delete
            </MudButton>
        </MudTd>
    </RowTemplate>

    <PagerContent>
        @* <MudTablePager />*@
    </PagerContent>

</MudTable>

<div class="d-flex flex-wrap mt-4">

    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>

</div>

@code {
    private bool dense = false;
    private bool hover = true;
    private bool striped = false;
    private bool bordered = false;

    private bool Succesful = false;
    private string Error = string.Empty;

    private string searchString = string.Empty;

    private IEnumerable<ApplicationUser> ApplicationUsers = new List<ApplicationUser>();

    protected override async Task OnInitializedAsync()
    {
        ApplicationUsers = await _managerService.GetAllManagers();
    }

    private async Task OnValidSubmit(string userId)
    {
        var user = await _managerService.DeleteManager(userId);
        if(user==null)
        {
            Succesful = false;
            Error = "User is null";
        }
        else
        {
            StateHasChanged();
        }
    }

    private bool FilterFunction(ApplicationUser applicationUser) => FilterFunc(applicationUser, searchString);

    private bool FilterFunc(ApplicationUser applicationUser, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString)) return true;

        if (applicationUser.FamilyName.Contains(searchString, StringComparison.OrdinalIgnoreCase)) return true;
        if (applicationUser.GivenName.Contains(searchString, StringComparison.OrdinalIgnoreCase)) return true;
        if (applicationUser.Department.Contains(searchString, StringComparison.OrdinalIgnoreCase)) return true;
        if (applicationUser.DepartmentNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase)) return true;
        if (applicationUser.Email.Contains(searchString, StringComparison.OrdinalIgnoreCase)) return true;

        return false;
    }
}
